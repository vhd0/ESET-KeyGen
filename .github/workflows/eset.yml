name: Generator

on:
  workflow_dispatch:
    inputs:
      account:
        description: 'Number of Accounts to be generated (default = 0)'
        required: false
        default: '0'
      key:
        description: 'Number of Keys to be generated (default = 1)'
        required: false
        default: '1'
      mail:
        description: 'Choose the mail provider to generate license'
        required: true
        type: choice
        options:
        - 1secmail
        - guerrillamail
        - developermail
        - mailticking
        - fakemail
        - inboxes
        - incognitomail
        default: fakemail
      key_type:
        description: 'Modes of operation'
        required: true
        type: choice
        options:
        - --key
        - --small-business-key
        - --vpn-codes
        default: --key
      os:
        description: 'Operating System of runner'
        required: true
        type: choice
        options:
        - macOS
        - Linux
        - Windows
        default: macOS
      branch:
        description: "Repository branch"
        required: false
        type: choice
        options:
        - main
        - test
        default: main

  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight UTC

jobs:
  run-generator:
    runs-on: ubuntu-latest

    env:
      ACCOUNT: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.account || '1' }}
      KEY: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.key || '1' }}
      MAIL: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.mail || 'fakemail' }}
      KEY_TYPE: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.key_type || '--key' }}
      OS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.os || 'Linux' }}
      BRANCH: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || 'main' }}

    steps:
      - name: Check OS type and proceed if Linux
        if: env.OS == 'Linux'
        run: |
          echo "Running on Linux..."

          git clone -b ${BRANCH} https://github.com/rzc0d3r/ESET-KeyGen.git
          cd ESET-KeyGen

          sudo apt update
          sudo apt install -y python3-pip python3-venv
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

          if [[ ${ACCOUNT} -ne 0 && ${KEY} -ne 0 ]]; then
            python3 main.py --auto-detect-browser --account --email-api ${MAIL} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${ACCOUNT}
            python3 main.py --auto-detect-browser ${KEY_TYPE} --email-api ${MAIL} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${KEY}
            echo "Account:" >> $GITHUB_STEP_SUMMARY
            cat ./*ACCOUNTS.txt >> $GITHUB_STEP_SUMMARY
            echo -e "\nKey:" >> $GITHUB_STEP_SUMMARY
            cat ./*KEYS.txt >> $GITHUB_STEP_SUMMARY
          elif [[ ${ACCOUNT} -ne 0 ]]; then
            python3 main.py --auto-detect-browser --account --email-api ${MAIL} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${ACCOUNT}
            echo -e "\nAccount:" >> $GITHUB_STEP_SUMMARY
            cat ./*ACCOUNTS.txt >> $GITHUB_STEP_SUMMARY
          elif [[ ${KEY} -ne 0 ]]; then
            python3 main.py --auto-detect-browser ${KEY_TYPE} --email-api ${MAIL} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${KEY}
            echo -e "\nKey:" >> $GITHUB_STEP_SUMMARY
            cat ./*KEYS.txt >> $GITHUB_STEP_SUMMARY
          fi
