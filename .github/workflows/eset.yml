name: Automated Account and Key Generator
on:
  # Lên lịch chạy hàng ngày vào lúc 00:00 UTC
  schedule:
    - cron: "0 0 * * *"
  # Cho phép chạy thủ công từ giao diện GitHub Actions
  workflow_dispatch:
    inputs:
      account:
        description: 'Số lượng tài khoản cần tạo (mặc định = 0)'
        required: false
        default: '0'
        type: string
      key:
        description: 'Số lượng khóa cần tạo (mặc định = 1)'
        required: false
        default: '1'
        type: string
      mail:
        description: 'Chọn nhà cung cấp email để tạo giấy phép'
        required: true
        type: choice
        options:
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - fakemail
          - inboxes
          - incognitomail
          - emailfake
        default: emailfake
      key_type:
        description: 'Chế độ hoạt động'
        required: true
        type: choice
        options:
          - --key
          - --small-business-key
        default: --key
      os:
        description: 'Hệ điều hành của runner (Linux, macOS, Windows)'
        required: true
        type: choice
        options:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        default: windows-latest
      branch:
        description: "Nhánh kho lưu trữ (không chạm vào nếu bạn không biết gì về nó!!!)"
        required: false
        type: choice
        options:
          - main
          - test
        default: main

jobs:
  prepare-run:
    runs-on: ubuntu-latest
    # Luôn chạy job này để xác định các biến đầu vào, dù là thủ công hay tự động
    outputs:
      account: ${{ steps.set-vars.outputs.account }}
      key: ${{ steps.set-vars.outputs.key }}
      mail: ${{ steps.set-vars.outputs.mail }}
      key_type: ${{ steps.set-vars.outputs.key_type }}
      os: ${{ steps.set-vars.outputs.os }}
      branch: ${{ steps.set-vars.outputs.branch }}
    steps:
      - name: Đặt biến dựa trên loại trigger
        id: set-vars
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Sử dụng các giá trị nhập từ workflow_dispatch nếu chạy thủ công
            echo "account=${{ github.event.inputs.account || '0' }}" >> $GITHUB_OUTPUT
            echo "key=${{ github.event.inputs.key || '1' }}" >> $GITHUB_OUTPUT
            echo "mail=${{ github.event.inputs.mail || 'emailfake' }}" >> $GITHUB_OUTPUT
            echo "key_type=${{ github.event.inputs.key_type || '--key' }}" >> $GITHUB_OUTPUT
            echo "os=${{ github.event.inputs.os || 'windows-latest' }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.inputs.branch || 'main' }}" >> $GITHUB_OUTPUT
            echo "Chạy thủ công với các giá trị đã chọn."
          else # Sự kiện schedule (lịch trình)
            # Định nghĩa các tùy chọn để ngẫu nhiên hóa
            mail_options=("1secmail" "guerrillamail" "developermail" "mailticking" "fakemail" "inboxes" "incognitomail" "emailfake")
            key_type_options=("--key" "--small-business-key")
            os_options=("ubuntu-latest" "macos-latest" "windows-latest")
            branch_options=("main" "test")
            # Chọn ngẫu nhiên các giá trị
            random_mail=${mail_options[$RANDOM % ${#mail_options[@]}]}
            random_key_type=${key_type_options[$RANDOM % ${#key_type_options[@]}]}
            random_os=${os_options[$RANDOM % ${#os_options[@]}]}
            random_branch=${branch_options[$RANDOM % ${#branch_options[@]}]}
            echo "account=0" >> $GITHUB_OUTPUT
            echo "key=1" >> $GITHUB_OUTPUT
            echo "mail=$random_mail" >> $GITHUB_OUTPUT
            echo "key_type=$random_key_type" >> $GITHUB_OUTPUT
            echo "os=$random_os" >> $GITHUB_OUTPUT
            echo "branch=$random_branch" >> $GITHUB_OUTPUT
            echo "Chạy tự động với các giá trị ngẫu nhiên."
          fi

  generate-account-and-key:
    # Job này phụ thuộc vào 'prepare-run' để lấy các đầu vào đã được xác định
    needs: prepare-run
    # Sử dụng hệ điều hành được chọn từ job trước
    runs-on: ${{ needs.prepare-run.outputs.os }}
    permissions:
      contents: write # Cấp quyền ghi cho GITHUB_TOKEN để đẩy thay đổi
    steps:
      - name: Kiểm tra kho lưu trữ
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Đảm bảo GITHUB_TOKEN được sử dụng để checkout
          # Checkout nhánh đích để đảm bảo git push hoạt động đúng cách
          ref: ${{ needs.prepare-run.outputs.branch }} 
      
      - name: Thiết lập & Chạy Script (Đa nền tảng)
        shell: bash # Sử dụng Bash cho tất cả các hệ điều hành để nhất quán
        run: |
          # Cài đặt Python và các phụ thuộc
          if command -v brew &> /dev/null; then
            # macOS
            brew install python@3.11 || true
          elif command -v apt-get &> /dev/null; then
            # Linux
            sudo apt update
            sudo apt install -y python3-pip python3-venv
          elif command -v python &> /dev/null; then
            # Windows (Git Bash/WSL) - Python thường đã có sẵn
            echo "Python đã có sẵn trên Windows runner."
          else
            echo "Lỗi: Không tìm thấy Python. Vui lòng cài đặt Python trên runner."
            exit 1
          fi

          # Tạo và kích hoạt môi trường ảo Python
          python3 -m venv venv
          # Kích hoạt venv tùy thuộc vào OS
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            source venv/Scripts/activate # Đối với Windows runners (Git Bash/WSL)
          else
            source venv/bin/activate # Đối với Linux/macOS
          fi
          
          # Cài đặt các phụ thuộc Python
          pip install -r requirements.txt
          
          # Gán các biến từ đầu ra của job 'prepare-run'
          INITIAL_ACCOUNT="${{ needs.prepare-run.outputs.account }}"
          INITIAL_KEY="${{ needs.prepare-run.outputs.key }}"
          INITIAL_MAIL="${{ needs.prepare-run.outputs.mail }}"
          INITIAL_KEY_TYPE="${{ needs.prepare-run.outputs.key_type }}"

          echo "Đang chạy với:"
          echo "  Tài khoản: $INITIAL_ACCOUNT"
          echo "  Khóa: $INITIAL_KEY"
          echo "  Email: $INITIAL_MAIL"
          echo "  Loại khóa: $INITIAL_KEY_TYPE"

          # Define pools for retries (can be a subset or all options)
          # Add initial selection to the front of the list to try it first
          MAIL_OPTIONS=("${INITIAL_MAIL}" "1secmail" "guerrillamail" "developermail" "mailticking" "fakemail" "inboxes" "incognitomail" "emailfake")
          KEY_TYPE_OPTIONS=("${INITIAL_KEY_TYPE}" "--key" "--small-business-key")

          # Flag to indicate if a key was successfully generated
          KEY_GENERATED="false"

          # Loop through mail options
          for mail_provider in "${MAIL_OPTIONS[@]}"; do
              # Loop through key type options
              for key_type_option in "${KEY_TYPE_OPTIONS[@]}"; do
                  echo "Thử tạo khóa với Email: $mail_provider, Loại khóa: $key_type_option"

                  # Clean up previous attempt's output files
                  rm -f ./*ACCOUNTS.txt ./*KEYS.txt

                  # Run main.py for accounts if needed
                  if [[ "$INITIAL_ACCOUNT" != "0" ]]; then
                      python3 main.py --auto-detect-browser --account --email-api "$mail_provider" --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat "$INITIAL_ACCOUNT"
                      # No need to check success for accounts, just try to generate keys
                  fi

                  # Run main.py for keys
                  if [[ "$INITIAL_KEY" != "0" ]]; then
                      python3 main.py --auto-detect-browser "$key_type_option" --email-api "$mail_provider" --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat "$INITIAL_KEY"
                      
                      # Check if keys were successfully generated
                      if grep -q "License Key:" ./*KEYS.txt 2>/dev/null; then
                          echo "Đã tạo khóa thành công với Email: $mail_provider, Loại khóa: $key_type_option"
                          KEY_GENERATED="true"
                          break 2 # Break out of both loops
                      else
                          echo "Không tạo được khóa với Email: $mail_provider, Loại khóa: $key_type_option. Thử lại..."
                      fi
                  else
                      # If KEY is 0, we still want to process accounts if any
                      KEY_GENERATED="true" # Treat as successful if no keys were requested
                      break 2
                  fi
              done
              if [[ "$KEY_GENERATED" == "true" ]]; then
                  break # Break outer loop if key generated
              fi
          done

          if [[ "$KEY_GENERATED" == "false" && "$INITIAL_KEY" != "0" ]]; then
              echo "Lỗi: Không thể tạo khóa sau khi thử tất cả các tổ hợp."
              # Nếu bạn muốn job thất bại khi không thể tạo khóa, hãy bỏ comment dòng dưới
              # exit 1
          fi

          # Thực thi script Python để định dạng và cập nhật Markdown
          python3 format_and_update_md.py
          # Kết thúc logic định dạng và tạo generated_results.md

      - name: Cập nhật và đẩy kết quả vào nhánh chính
        if: success() || failure() # Chạy ngay cả khi các bước trước có lỗi nhẹ
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Kiểm tra xem có thay đổi nào trong generated_results.md không
          git add generated_results.md
          git diff-index --quiet HEAD || git commit -m "Cập nhật kết quả tạo tài khoản và khóa tự động"
          
          # Đẩy lên nhánh đã chọn
          git push origin HEAD:${{ needs.prepare-run.outputs.branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Cần token để đẩy lên repo
