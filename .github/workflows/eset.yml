name: ESET Key Generator

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      key:
        description: 'Number of Keys to generate (default = 1)'
        required: false
        default: '1'
        type: string
      mail:
        description: 'Mail provider for license generation'
        required: true
        type: choice
        options:
          - fakemail
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - inboxes
          - incognitomail
        default: fakemail
      key_type:
        description: 'License type'
        required: true
        type: choice
        options:
          - --key
          - --small-business-key
          - --vpn-codes
        default: --key

jobs:
  generate:
    name: Generate ESET License
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Clone KeyGen Repository
        uses: actions/checkout@v4
        with:
          repository: rzc0d3r/ESET-KeyGen

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq xvfb

      - name: Setup Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate License
        id: generate
        run: |
          source venv/bin/activate
          
          # Chạy với xvfb để giả lập display
          xvfb-run python main.py \
            --auto-detect-browser \
            ${{ github.event.inputs.key_type || '--key' }} \
            --email-api ${{ github.event.inputs.mail || 'fakemail' }} \
            --skip-update-check \
            --no-logo \
            --disable-progress-bar \
            --disable-logging \
            --repeat ${{ github.event.inputs.key || '1' }}
          
          if [ -f *KEYS.txt ]; then
            # Lấy chỉ license key từ file output
            LICENSE_KEY=$(grep -oP 'License Key: \K[A-Z0-9-]+' *KEYS.txt)
            echo "key=$LICENSE_KEY" >> $GITHUB_OUTPUT
            
            echo "## Generated License" >> $GITHUB_STEP_SUMMARY
            echo "Key: $LICENSE_KEY" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ No keys were generated" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Checkout Target Repository
        if: success()
        uses: actions/checkout@v4
        with:
          path: target
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Keys Database
        if: success()
        run: |
          cd target
          
          # Tạo file keys nếu chưa tồn tại
          if [ ! -f eset_keys.json ]; then
            echo '{"keys":[]}' > eset_keys.json
          fi
          
          # Cập nhật keys
          NEW_KEY="${{ steps.generate.outputs.key }}"
          CURRENT_DATE=$(date -u +"%Y-%m-%d")
          
          # Kiểm tra xem key đã tồn tại chưa
          KEY_EXISTS=$(jq --arg key "$NEW_KEY" '.keys[] | select(.[0] == $key) | length' eset_keys.json)
          if [ "$KEY_EXISTS" = "" ]; then
            # Thêm key mới nếu chưa tồn tại
            jq --arg key "$NEW_KEY" --arg date "$CURRENT_DATE" '
            .keys = (
              .keys | map(
                select(
                  (now - (.[1] | fromdateiso8601)) < 2592000
                )
              )
              + [[$key, $date]]
            )' eset_keys.json > temp.json && mv temp.json eset_keys.json
          fi
          
          # Cập nhật README
          cat > README.md << EOF
          # ESET License Keys
          
          Auto-generated ESET license keys (valid for 30 days from generation date).
          
          ## Active Keys
          
          | Key | Generated | Expires |
          |-----|-----------|---------|
          $(jq -r '.keys[] | "| \(.[0]) | \(.[1]) | \(.[1] | fromdate | strftime("%Y-%m-%d") | split("-") | .[0] + "-" + .[1] + "-" + (.[2] | tonumber + 30 | tostring) ) |"' eset_keys.json)
          
          > Last updated: $(date -u "+%Y-%m-%d %H:%M:%S UTC")
          
          ## Notes
          - Keys are automatically generated daily at 00:00 UTC
          - Keys older than 30 days are automatically removed
          - Each key can be used on up to 3 devices
          
          ## Usage
          1. Download ESET Security
          2. Install the application
          3. When prompted for license, enter the key from the table above
          4. Enjoy your 30-day premium protection
          EOF

      - name: Commit Changes
        if: success()
        run: |
          cd target
          
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add eset_keys.json README.md
          
          if ! git diff --cached --quiet; then
            git commit -m "🔑 Update ESET keys [skip ci]
            
            • Added: ${{ steps.generate.outputs.key }}
            • Generated: $(date -u '+%Y-%m-%d')
            • Expires: $(date -u -d '+30 days' '+%Y-%m-%d')
            
            [Auto-generated by GitHub Actions]"
            
            git push
          fi

      - name: Cleanup
        if: always()
        run: |
          rm -rf venv
          rm -rf target

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
