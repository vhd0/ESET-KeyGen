name: Automated Account and Key Generator
on:
  # Lên lịch chạy hàng ngày vào lúc 00:00 UTC
  schedule:
    - cron: "0 0 * * *"
  # Cho phép chạy thủ công từ giao diện GitHub Actions
  workflow_dispatch:
    inputs:
      account:
        description: 'Số lượng tài khoản cần tạo (mặc định = 0)'
        required: false
        default: '0'
        type: string
      key:
        description: 'Số lượng khóa cần tạo (mặc định = 1)'
        required: false
        default: '1'
        type: string
      mail:
        description: 'Chọn nhà cung cấp email để tạo giấy phép'
        required: true
        type: choice
        options:
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - fakemail
          - inboxes
          - incognitomail
          - emailfake
        default: emailfake
      key_type:
        description: 'Chế độ hoạt động'
        required: true
        type: choice
        options:
          - --key
          - --small-business-key
        default: --key
      os:
        description: 'Hệ điều hành của runner (Linux, macOS, Windows)'
        required: true
        type: choice
        options:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        default: windows-latest
      branch:
        description: "Nhánh kho lưu trữ (không chạm vào nếu bạn không biết gì về nó!!!)"
        required: false
        type: choice
        options:
          - main
          - test
        default: main

jobs:
  prepare-run:
    runs-on: ubuntu-latest
    # Luôn chạy job này để xác định các biến đầu vào, dù là thủ công hay tự động
    outputs:
      account: ${{ steps.set-vars.outputs.account }}
      key: ${{ steps.set-vars.outputs.key }}
      mail: ${{ steps.set-vars.outputs.mail }}
      key_type: ${{ steps.set-vars.outputs.key_type }}
      os: ${{ steps.set-vars.outputs.os }}
      branch: ${{ steps.set-vars.outputs.branch }}
    steps:
      - name: Đặt biến dựa trên loại trigger
        id: set-vars
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Sử dụng các giá trị nhập từ workflow_dispatch nếu chạy thủ công
            echo "account=${{ github.event.inputs.account || '0' }}" >> $GITHUB_OUTPUT
            echo "key=${{ github.event.inputs.key || '1' }}" >> $GITHUB_OUTPUT
            echo "mail=${{ github.event.inputs.mail || 'emailfake' }}" >> $GITHUB_OUTPUT
            echo "key_type=${{ github.event.inputs.key_type || '--key' }}" >> $GITHUB_OUTPUT
            echo "os=${{ github.event.inputs.os || 'windows-latest' }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.inputs.branch || 'main' }}" >> $GITHUB_OUTPUT
            echo "Chạy thủ công với các giá trị đã chọn."
          else # Sự kiện schedule (lịch trình)
            # Định nghĩa các tùy chọn để ngẫu nhiên hóa
            mail_options=("1secmail" "guerrillamail" "developermail" "mailticking" "fakemail" "inboxes" "incognitomail" "emailfake")
            key_type_options=("--key" "--small-business-key")
            os_options=("ubuntu-latest" "macos-latest" "windows-latest")
            branch_options=("main" "test")
            # Chọn ngẫu nhiên các giá trị
            random_mail=${mail_options[$RANDOM % ${#mail_options[@]}]}
            random_key_type=${key_type_options[$RANDOM % ${#key_type_options[@]}]}
            random_os=${os_options[$RANDOM % ${#os_options[@]}]}
            random_branch=${branch_options[$RANDOM % ${#branch_options[@]}]}
            echo "account=0" >> $GITHUB_OUTPUT
            echo "key=1" >> $GITHUB_OUTPUT
            echo "mail=$random_mail" >> $GITHUB_OUTPUT
            echo "key_type=$random_key_type" >> $GITHUB_OUTPUT
            echo "os=$random_os" >> $GITHUB_OUTPUT
            echo "branch=$random_branch" >> $GITHUB_OUTPUT
            echo "Chạy tự động với các giá trị ngẫu nhiên."
          fi

  generate-account-and-key:
    # Job này phụ thuộc vào 'prepare-run' để lấy các đầu vào đã được xác định
    needs: prepare-run
    # Sử dụng hệ điều hành được chọn từ job trước
    runs-on: ${{ needs.prepare-run.outputs.os }}
    steps:
      - name: Kiểm tra kho lưu trữ
        uses: actions/checkout@v4
      - name: Sao chép kho lưu trữ ESET-KeyGen
        run: git clone -b "${{ needs.prepare-run.outputs.branch }}" https://github.com/rzc0d3r/ESET-KeyGen.git
      - name: Thiết lập & Chạy Script (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd ESET-KeyGen
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            # Cài đặt Python 3.11 trên macOS
            brew install python@3.11 || true
          else
            # Cập nhật apt và cài đặt các phụ thuộc Python trên Linux
            sudo apt update
            sudo apt install -y python3-pip python3-venv
          fi
          # Tạo và kích hoạt môi trường ảo Python
          python3 -m venv venv
          source venv/bin/activate
          # Cài đặt các phụ thuộc Python
          pip install -r requirements.txt
          # Gán các biến từ đầu ra của job 'prepare-run'
          ACCOUNT="${{ needs.prepare-run.outputs.account }}"
          KEY="${{ needs.prepare-run.outputs.key }}"
          MAIL="${{ needs.prepare-run.outputs.mail }}"
          KEY_TYPE="${{ needs.prepare-run.outputs.key_type }}"
          echo "Đang chạy với:"
          echo "  Tài khoản: $ACCOUNT"
          echo "  Khóa: $KEY"
          echo "  Email: $MAIL"
          echo "  Loại khóa: $KEY_TYPE"
          
          # Chạy tạo tài khoản nếu ACCOUNT không phải là 0
          if [[ "$ACCOUNT" != "0" ]]; then
            python3 main.py --auto-detect-browser --account --email-api "$MAIL" --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat "$ACCOUNT"
            echo "### Tài khoản đã tạo" >> $GITHUB_STEP_SUMMARY
            cat ./*ACCOUNTS.txt >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Không có" >> $GITHUB_STEP_SUMMARY
          fi
          # Chạy tạo khóa nếu KEY không phải là 0
          if [[ "$KEY" != "0" ]]; then
            python3 main.py --auto-detect-browser "$KEY_TYPE" --email-api "$MAIL" --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat "$KEY"
            echo -e "\n### Khóa đã tạo" >> $GITHUB_STEP_SUMMARY
            cat ./*KEYS.txt >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Không có" >> $GITHUB_STEP_SUMMARY
          fi
      - name: Thiết lập & Chạy Script (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd ESET-KeyGen
          # Tạo và kích hoạt môi trường ảo Python
          python -m venv venv
          .\venv\Scripts\pip install -r requirements.txt
          .\venv\Scripts\Activate.ps1
          # Gán các biến từ đầu ra của job 'prepare-run'
          $ACCOUNT = "${{ needs.prepare-run.outputs.account }}"
          $KEY = "${{ needs.prepare-run.outputs.key }}"
          $MAIL = "${{ needs.prepare-run.outputs.mail }}"
          $KEY_TYPE = "${{ needs.prepare-run.outputs.key_type }}"
          Write-Host "Đang chạy với:"
          Write-Host "  Tài khoản: $ACCOUNT"
          Write-Host "  Khóa: $KEY"
          Write-Host "  Email: $MAIL"
          Write-Host "  Loại khóa: $KEY_TYPE"
          
          # Chạy tạo tài khoản nếu $ACCOUNT không phải là 0
          if ($ACCOUNT -ne 0) {
            python main.py --auto-detect-browser --account --email-api "$MAIL" --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat $ACCOUNT
            "### Tài khoản đã tạo" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
            Get-Content -Path ./*ACCOUNTS.txt -ErrorAction SilentlyContinue | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          }
          # Chạy tạo khóa nếu $KEY không phải là 0
          if ($KEY -ne 0) {
            python main.py --auto-detect-browser "$KEY_TYPE" --email-api "$MAIL" --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat $KEY
            "`n### Khóa đã tạo" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
            Get-Content -Path ./*KEYS.txt -ErrorAction SilentlyContinue | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          }
      
      - name: Tải lên các tệp kết quả thô
        # Luôn tải lên artifact ngay cả khi các bước trước đó thất bại
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: raw-generated-files
          path: ESET-KeyGen/*.{txt,log} # Tải lên tất cả các tệp .txt và .log
          retention-days: 1 # Giữ artifact trong 1 ngày, chỉ để chuyển tiếp

  format-and-upload-results:
    needs: generate-account-and-key # Phụ thuộc vào job tạo và tải lên tệp thô
    runs-on: ubuntu-latest # Có thể chạy trên bất kỳ runner nào, ubuntu là phổ biến
    steps:
      - name: Kiểm tra kho lưu trữ
        uses: actions/checkout@v4
      - name: Tải xuống các tệp kết quả thô
        uses: actions/download-artifact@v4
        with:
          name: raw-generated-files
          path: ./downloaded-results # Tải xuống vào một thư mục riêng biệt

      - name: Định dạng và tạo tệp kết quả cuối cùng
        shell: bash
        run: |
          # Di chuyển vào thư mục chứa các tệp đã tải xuống
          cd ./downloaded-results

          # Khởi tạo file kết quả tổng hợp
          echo "# Kết quả tạo tài khoản và khóa" > generated_results.md
          echo "## Thông tin chạy" >> generated_results.md
          echo "- **Thời gian chạy**: $(date '+%Y-%m-%d %H:%M:%S UTC')" >> generated_results.md
          echo "- **Hệ điều hành Runner**: ${{ needs.prepare-run.outputs.os }}" >> generated_results.md
          echo "- **Nhánh kho lưu trữ**: ${{ needs.prepare-run.outputs.branch }}" >> generated_results.md
          echo "- **Nhà cung cấp Email**: ${{ needs.prepare-run.outputs.mail }}" >> generated_results.md
          echo "- **Chế độ hoạt động**: ${{ needs.prepare-run.outputs.key_type }}" >> generated_results.md
          echo "" >> generated_results.md

          ACCOUNT="${{ needs.prepare-run.outputs.account }}"
          KEY="${{ needs.prepare-run.outputs.key }}"

          # Xử lý tài khoản
          if [[ "$ACCOUNT" != "0" ]]; then
              echo "## Tài khoản đã tạo (${ACCOUNT} tài khoản)" >> generated_results.md
              echo "\`\`\`" >> generated_results.md
              if compgen -G "*ACCOUNTS.txt" > /dev/null; then # Kiểm tra nếu có tệp ACCOUNTS.txt
                  cat *ACCOUNTS.txt >> generated_results.md
              else
                  echo "Không có tài khoản nào được tạo." >> generated_results.md
              fi
              echo "\`\`\`" >> generated_results.md
              echo "" >> generated_results.md
          fi

          # Xử lý khóa
          if [[ "$KEY" != "0" ]]; then
              echo "## Khóa đã tạo (${KEY} khóa)" >> generated_results.md
              echo "\`\`\`" >> generated_results.md
              if compgen -G "*KEYS.txt" > /dev/null; then # Kiểm tra nếu có tệp KEYS.txt
                  cat *KEYS.txt >> generated_results.md
              else
                  echo "Không có khóa nào được tạo." >> generated_results.md
              fi
              echo "\`\`\`" >> generated_results.md
          fi
          
          # Di chuyển tệp kết quả ra thư mục gốc của job để tải lên
          mv generated_results.md ../generated_results.md

      - name: Tải lên kết quả đã tạo
        uses: actions/upload-artifact@v4
        with:
          name: final-generated-results
          path: generated_results.md
          retention-days: 7 # Giữ artifact trong 7 ngày
